// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int          @id @default(autoincrement())
  username       String       @unique
  email          String       @unique
  name           String
  location       String?
  password       String
  avatarURL      String?
  githubUsername String?
  following      User[]       @relation("FollowRelation", references: [id])
  followers      User[]       @relation("FollowRelation", references: [id])
  shops          CoffeeShop[]
  comments       Comment[]
  replies        Reply[]
  likes          Like[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model CoffeeShopPhoto {
  id           Int        @id @default(autoincrement())
  url          String
  shop         CoffeeShop @relation(fields: [coffeeShopId], references: [id])
  coffeeShopId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model CoffeeShop {
  id         Int               @id @default(autoincrement())
  name       String
  latitude   String?
  longitude  String?
  address    String?
  user       User              @relation(fields: [userId], references: [id])
  userId     Int
  photos     CoffeeShopPhoto[]
  categories Category[]
  comments   Comment[]
  likes      Like[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Category {
  id    Int          @id @default(autoincrement())
  name  String       @unique
  slug  String       @unique
  shops CoffeeShop[]
}

model Comment {
  id           Int        @id @default(autoincrement())
  payload      String
  shop         CoffeeShop @relation(fields: [coffeeShopId], references: [id])
  coffeeShopId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  replies      Reply[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Reply {
  id        Int      @id @default(autoincrement())
  payload   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  shop         CoffeeShop @relation(fields: [coffeeShopId], references: [id])
  coffeeShopId Int

  @@unique([userId, coffeeShopId])
}
